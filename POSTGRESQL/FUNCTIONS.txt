--CALL FUNCTION FROM PROCEDURE

create or replace procedure sp_emp_dtls(
e_name varchar,
	e_location varchar(50),
	dp_name varchar(50),
	e_salary int,
	b_salary int
)
language plpgsql
AS $$
declare 
dept_id int;
total_amount int;
BEGIN
select d_id into dept_id from department where d_name=dp_name;
select fn_cal_salary(e_salary,b_salary) into total_amount;
if(dept_id is null) then
insert into department(d_name) values (dp_name) returning d_id into dept_id;
insert into employee(e_name,e_location,d_id,emp_salary,bonus_salary,total_salary) values (e_name,e_location,dept_id,e_salary,b_salary,total_amount);
else
insert into employee(e_name,e_location,d_id,emp_salary,bonus_salary,total_salary) values (e_name,e_location,dept_id,e_salary,b_salary,total_amount);
end if;
END;
$$;

create or replace function fn_cal_salary(e_salary integer ,b_salary integer)
returns integer 
as $$
declare
total integer;
BEGIN
total :=e_salary+b_salary;
return total;
END;
$$
language plpgsql;

call sp_emp_dtls('TEMP','VELLORE','HR',20000,5000);
SELECT fn_cal_salary(15,20) as result;

select * from employee;

------------------------------------------------------------------------------------------------------------------------

--FUNCTION WITH TRIGGERS

create table orders(
	order_id serial primary key,
	order_name varchar(155),
	order_date timestamp
)

create or replace function fn_update_order_date()
returns trigger AS 
$$
BEGIN
New.order_date := now();
return new;
END;
$$ LANGUAGE PLPGSQL;

create or replace trigger trg_update_orders_date
BEFORE insert on orders
for each row
execute function fn_update_order_date();

insert into orders(order_name) values('laptop')

select * from orders;

-----------------------------------------------------------------------------------------------------------

create or replace function fn_total_revenue(revenue_domestic numeric(10,2),revenue_international numeric(10,2))
returns numeric(10,2)
as $$
declare
total_revenue numeric(10,2);
begin
total_revenue:=revenue_domestic+revenue_international;
return total_revenue;
end;
$$
language plpgsql;